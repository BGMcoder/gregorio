Building a Mac OS X Package
=============================================
These instructions are for building the gregorio OS X package, for release
versions. They will change as soon as I update build.sh to make it easier; 
this details setting up the build manually.

$ ./configure --enable-static-ltdl \
              --disable-shared \
              --enable-all-static \
              --disable-nls \
              --disable-dependency-tracking
$ make CFLAGS="-arch ppc -arch i386" LDFLAGS="-arch ppc -arch i386"
# make install

If this method fails, you can build the architectures separately, and use lipo to combine them.
$ lipo create gregorio_ppc gregorio_intel gregorio

Possible Issues
=================
- Leopard (by default) builds ppc code for ppc7400. This won't run on G3 Macs, but without an old Mac to test with...

Using PackageMaker
===============================
PackageMaker requires absolute paths to be given for everything installed. So it's easier to create a package root with two subdirs, usr/ and private/tmp/gregorio/, where we can put contrib/, examples/, fonts/, tex/, and the uninstall script. The postflight script will move this directory into the user's home dir, and delete the /private/tmp folder.

We'll assume we have all the files necessary. Opening PackageMaker first gives a dialog where you can fill in the org name and min target for deployment. If you built in a special directory like /my/package/builddir/root, you can just drag the entire thing into the Contents frame.

**If there are any unwanted files like the .DS_STORE files in this directory, you can filter them out in the Contents view. Or delete them before copying the directory, by running something like
$ find /my/package/builddir/root -name ".DS_Store" -exec rm -f {} \;

Also change the permissions here to match what they should be on the user's machine.

In the scripts view, just add the postflight.sh script.

In edit interface, you can change the background image, and add the Welcome, Read Me, and license files and add localizations.

Thats pretty much it, run build to make the package.

