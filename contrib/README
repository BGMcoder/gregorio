Here is the description of the different files in this section.

Scribus: gregorio-scribus.lua, gregorio.png and 900_gregorio.xml
========
These are files to use Gregorio in scribus. To use them, copy the three files
in the editorconfig folder of scribus (/usr/share/scribus/editorconfig
under debian for example, or C:\Program Files\Scribus\share\editorconfig
under Windows). Then read the comments in the .xml files and change some
variables accordingly. 
The second step is to allow Scribus to call gregorio: go in 
File->Preferences->External Tools, click add in the "Render Frames" part and
select the file 900_gregorio.xml.
After that you can insert a render frame using the program gregorio, and simply 
typing gabc (in right-click->edit sources).
For more details see http://home.gna.org/gregorio/scribus.


Gnome/Gtk/Gedit: gabc.lang
================
This is a lang file for gabc syntax highlighting in all the text viewer of
the gnome project, like gedit. Simply copy the file in 
/usr/share/gtksourceview-2.0/language-specs/ and it will work. There are still
some bugs to fix, but at least it looks better.


Kde/Kate/Kedit: gabc.xml
===============
This is a file for syntax highlighting in kate (and Kedit, etc.). To 
install it, simply copy the file in /usr/share/apps/katepart/syntax. This path
may not be the same according to your distribution.


Emacs: gregorio-mode.el
======
This is a file for gregorio integration in Emacs. See
https://github.com/cajetanus/gregorio-mode.el for more details, updates and
documentation.


Vim: gabc.vim
====
This is the highlight syntax file for vim. You can copy it in
/usr/share/vim/vimcurrent/syntax (on debian at least) and add the line
au BufNewFile,BufRead *.gabc                    setf gabc
somewhere near lines of the same type (near line 100 for example) in
/usr/share/vim/vimcurrent/filetype.vim . This will autodetect the filetypes.


TeXShop (Mac OSX): gregorio.engine, greg-book.engine, greg-lily-book.engine
                   and gregorio.scpt
=================
There are 2 ways of compiling gabc files directly from TeXShop:

1) Using an engine.  There are three TeXShop engines, each of which serves a different
   purpose: gregorio.engine, greg-book.engine, and greg-lily-book.engine. To use
   them copy them into ~/Library/TeXShop/Engines. Then in a Terminal window, run:

      defaults write TeXShop OtherTeXExtensions -array-add "gabc"

   Restart TeXShop, and you should be able to see the three engines as typesetting
   option in the upper left corner.
   
   a) gregorio.engine: This is the simplest engines and is designed to run gregorio on
      a gabc file and convert it to a tex file.  It will not produce a pdf output.  To
      make it the default engine for a gabc file add

         % !TEX engine = gregorio

      as the first line in the file.  Now typesetting the gabc file will run
      gregorio on it.
   
   b) greg-book.engine: This engine is designed to compile a full project, running
      gregorio on any included gabc files which have changed since the last compilation.
      It will produce a pdf output.  To make it the default engine for a tex file place

         % !TEX engine = greg-book

      as the first line in the main project file (i.e. the one that contains the document
      class declaration). With this engine set for the main project file, you can place

         % !TEX root = path_to_main_project/file.tex

      as the first line in the gabc file. Now typesetting the gabc file will trigger the
      typesetting of the main project file.

   c) greg-lily-book.engine: This engine is designed to compile a full project which
      combines gregorio with LilyPond (enabling both modern and chant notation in the
      same project).  To use it you must have LilyPond-Book.engine (version 2.0.4,
      released 2014/03/23,  or higher) installed as an active engine on your system.
      Updated versions of this engine are available at 

         https://sole.dimi.uniud.it/~nicola.vitacolonna/software/lilypond-texshop/

      To make this engine the default engine for a tex file add

         % !TEX angine = greg-lily-book
	 % !LILYPOND tex = lualatex --shell-escape

      as the first two lines.  Note that the second line is required to override
      lilypond-book's default tex processor (pdflatex) and force the use of lualatex.
      The option (--shell-escape) is needed if you use (gre)includegabcscore in your
      document.  If you confine yourself to (gre)include(tex)score it can be left off
      (and you can get away with some earlier versions of LilyPond-Book).  However, when
      using (gre)include(tex)score you must provide the gtex extension explicitly.  If
      you leave off the extension or provide the extension tex LilyPond-Book will be
      unable to find the included scores.
   
2) Using gregorio.scpt. It will call gregorio on your gabc file, converting 
   to GregorioTeX. You can modify it if you need another output format. To set
   it up, open the Macro Editor in TeXShop. Select "New Item", and call it 
   "gregorio" (or whatever you wish). Copy and paste all the text of 
   gregorio.scpt into the Content window, and click save. To use it, type and 
   save a gabc file and then just choose the gregorio macro from the menu.



TeXworks: gregorio.engine, gregorio.bat, greg-book.engine, and greg-lily-book.engine.
=========

These engines work identically to the ones for TeXShop with the following exceptions:

1) On OSX the files should be placed in ~/Library/TeXworks/engines/.  You will most likely
   have to create this folder.  You will also need to place LilyPond-Book.engine here if
   you plan on using greg-lily-book.engine.

2) On Windows the engine files do not work.  Use gregorio.bat instead.  This duplicates
   the functionality of gregorio.engine.  Development of a Windows equivalent of 
   greg-book.engine and greg-lily-book.engine is ongoing.  To figure out where to place
   gregorio.bat, open TeXworks and select Help -> Settings and Resources.  Click on the
   link to the Resources folder (a trick which also works in OSX), create an engines
   folder here, and place gregorio.bat inside.

Once you've placed the engine files, open TeXworks Preferences and select the Typesetting
tab.  Click on the plus sign in the bottom pane to add a new tex processor, name the
processor according to the engine you're setting up (drop the extension), browse to that 
engine, and then add "$fullname" as the argument for the engine.  On Windows you should 
also add "$basename" as the second argument.  Click OK until you're out of Preferences 
and the engine should be ready to use.


BBEdit and TextWrangler: gabc-syntax.plist
========================
This file will highlight gabc syntax in the BBEdit and TextWrangler editors. To
install it, just copy it into ~/Library/Application Support/TextWrangler/Language Modules/ 
and restart BBEdit or TextWrangler.


Automatic Gregorio Processing: gprocess
==============================
gprocess is a perl script to instantly compile and show the result of a gabc
file. You can modify some variables directly into the script, for example the
pdf viewer program.
